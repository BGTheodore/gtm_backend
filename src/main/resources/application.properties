## MicroService name
spring.application.name=GeoTechMap

## Port
server.port=8080

## Keycloak config
keycloak.realm                      = GTM
keycloak.auth-server-url            = http://localhost:8090/auth
keycloak.ssl-required               = external
keycloak.resource                   = springboot-microservice
keycloak.credentials.secret         = 5ac9353f-cf4b-498f-88ef-df14c6af7772
keycloak.use-resource-role-mappings = true
keycloak.bearer-only                = true

 ## Postgresql DataSource
spring.datasource.url=jdbc:postgresql://localhost:5432/geotechdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.database-platform=org.hibernate.spatial.dialect.postgis.PostgisDialect
spring.datasource.driver-class-name=org.postgresql.Driver
# spring.security.user.name=user
# spring.security.user.password=password


server.servlet.session.timeout=600s

## JPA
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true

spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=America/New_York
# spring.jackson.default-property-inclusion=non-null



## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
# All files uploaded through the REST API will be stored in this directory
# file.upload-dir=/home/kevin/Documents/kevin/EN3/PROJET_FINAL_URGEO/Spring/gtm/geotechmap/backend/gtm/src/main/resources